# https://hub.docker.com/r/cschranz/gpu-jupyter/dockerfile
FROM cschranz/gpu-jupyter:v1.5_cuda-11.6_ubuntu-20.04

USER root

########################################################
# Common
########################################################
# パッケージの追加とタイムゾーンの設定
# 必要に応じてインストールするパッケージを追加してください
RUN apt-get update

RUN apt-get install -y --no-install-recommends \
        software-properties-common \
        tzdata \
    && ln -sf /usr/share/zoneinfo/Asia/Tokyo /etc/localtime \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install CUDA
RUN wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/cuda-ubuntu1804.pin
RUN mv cuda-ubuntu1804.pin /etc/apt/preferences.d/cuda-repository-pin-600
RUN apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub
RUN add-apt-repository "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/ /"
RUN apt-get update

# # コマンドを１つにしたいが、時間がかかるため分割している
# RUN apt-get -y --no-install-recommends install cuda-11-0
# RUN apt-get -y --no-install-recommends install cuda-11-5
# RUN apt-get -y --no-install-recommends install cuda-11-6
# RUN apt-get -y --no-install-recommends install cuda-11-7 cuda-11-8
# RUN apt-get -y --no-install-recommends install cuda-12-0 cuda-12-1

# # Install cuDNN 11.x
# COPY cudnn-linux-x86_64-8.8.1.3_cuda11-archive.tar.xz /tmp
# RUN tar -Jxvf /tmp/cudnn-linux-x86_64-8.8.1.3_cuda11-archive.tar.xz -C /tmp
# RUN cp /tmp/cudnn-linux-x86_64-8.8.1.3_cuda11-archive/include/cudnn* /usr/local/cuda-11.0/include \
#     && cp /tmp/cudnn-linux-x86_64-8.8.1.3_cuda11-archive/lib/libcudnn* /usr/local/cuda-11.0/lib64
# RUN cp /tmp/cudnn-linux-x86_64-8.8.1.3_cuda11-archive/include/cudnn* /usr/local/cuda-11.5/include \
#     && cp /tmp/cudnn-linux-x86_64-8.8.1.3_cuda11-archive/lib/libcudnn* /usr/local/cuda-11.5/lib64
# RUN cp /tmp/cudnn-linux-x86_64-8.8.1.3_cuda11-archive/include/cudnn* /usr/local/cuda-11.6/include \
#     && cp /tmp/cudnn-linux-x86_64-8.8.1.3_cuda11-archive/lib/libcudnn* /usr/local/cuda-11.6/lib64
# RUN cp /tmp/cudnn-linux-x86_64-8.8.1.3_cuda11-archive/include/cudnn* /usr/local/cuda-11.7/include \
#     && cp /tmp/cudnn-linux-x86_64-8.8.1.3_cuda11-archive/lib/libcudnn* /usr/local/cuda-11.7/lib64
# RUN cp /tmp/cudnn-linux-x86_64-8.8.1.3_cuda11-archive/include/cudnn* /usr/local/cuda-11.8/include \
#     && cp /tmp/cudnn-linux-x86_64-8.8.1.3_cuda11-archive/lib/libcudnn* /usr/local/cuda-11.8/lib64

# # cuda version 切り替え登録
# # 例: 切り替えコマンド -> update-alternatives --config cuda
# RUN update-alternatives --install /usr/local/cuda cuda /usr/local/cuda-11.0 1
# RUN update-alternatives --install /usr/local/cuda cuda /usr/local/cuda-11.5 100
# RUN update-alternatives --install /usr/local/cuda cuda /usr/local/cuda-11.6 100
# RUN update-alternatives --install /usr/local/cuda cuda /usr/local/cuda-11.7 3
# RUN update-alternatives --install /usr/local/cuda cuda /usr/local/cuda-11.8 4




########################################################
# Custom
########################################################
# この下に、個人用の設定を追加...
ARG DEBIAN_FRONTEND=noninteractive

# Basic
# RUN conda install -y -c conda-forge jupyterlab-git nodejs
# RUN conda install pytorch torchvision torchaudio pytorch-cuda=11.6 -c pytorch -c nvidia
# RUN conda install -y -c huggingface transformers
# RUN conda install -y sentencepiece

# # JupyterLab関連のパッケージ（いくつかの拡張機能を含む）
# # 必要に応じて、JupyterLabの拡張機能などを追加してください
# RUN python3 -m pip install --upgrade pip \
# &&  pip install --no-cache-dir \
#     black \
#     jupyterlab \
#     jupyterlab_code_formatter \
#     jupyterlab-git \
#     lckr-jupyterlab-variableinspector \
#     jupyterlab_widgets \
#     ipywidgets \
#     import-ipynb

# # 基本パッケージ
# # Pythonでよく利用する基本的なパッケージです
# # JupyterLabの動作には影響しないので、必要に応じてカスタマイズしてください
# RUN pip install --no-cache-dir \
#     numpy \
#     pandas \
#     scipy \
#     scikit-learn \
#     pycaret \
#     matplotlib \
#     japanize_matplotlib \
#     mlxtend \
#     seaborn \
#     plotly \
#     requests \
#     beautifulsoup4 \
#     Pillow \
#     opencv-python

# # 追加パッケージ（必要に応じて）
# # 各環境に特化したパッケージがある場合、この部分に追加します
# RUN pip install --no-cache-dir \
#     pydeps \
#     graphviz \
#     pandas_profiling \
#     shap \
#     umap \
#     xgboost \
#     lightgbm

# ENV TZ=Asia/Tokyo
# USER jovyan
# EXPOSE 8888
